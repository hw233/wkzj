<?xml version="1.0" encoding="UTF-8"?>
<project name="jt-server" default="default" basedir="../">
	<tstamp>
		<format property="create.time" pattern="yyyyMMdd_HHmm" />
		<format property="package.time" pattern="yyyy/MM/dd HH:mm:ss" />
	</tstamp>

	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="resource.dir" value="resource" />

	<property name="jarName" value="ztt-server.jar" />
	<property name="classes.tempdir" value="classes" />
	<property name="target.tempdir" value="target" />
	<property name="release.dir" value="../../publish/server/${create.time}" />

	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- 默认 -->
	<target name="default" depends="package,clean" />

	<!-- 编译 -->
	<target name="compile">
		<mkdir dir="${classes.tempdir}" />
		<delete dir="${classes.tempdir}" includeemptydirs="true">
			<include name="**/*.*" />
		</delete>
		<javac debug="true" deprecation="true" destdir="${classes.tempdir}" nowarn="true" optimize="on" target="1.7" encoding="utf-8" source="1.7" includeAntRuntime="false">
			<classpath refid="compile.classpath" />
			<src path="${src.dir}" />
		</javac>
	</target>

	<property name="proguard.lib" value="dist/proguard/lib" />
	
	<target name="proguard" depends="compile" description="混淆引用到的子工程jar文件，并替换">
		<taskdef resource="${proguard.lib}/task.properties" classpath="${proguard.lib}/proguard.jar" />
		<proguard configuration="${proguard}/proguard.pro">
			<injar file="${referenced.lib}/${childproject1.name}.jar" />
			<outjar file="${referenced.lib}/OB_${childproject1.name}.jar" />
			<injar file="${referenced.lib}/${childproject2.name}.jar" />
			<outjar file="${referenced.lib}/OB_${childproject2.name}.jar" />
			<libraryjar dir="${lib}" />
		</proguard>
		<move file="${referenced.lib}/OB_${childproject1.name}.jar" tofile="${referenced.lib}/${childproject1.name}.jar" />
		<move file="${referenced.lib}/OB_${childproject2.name}.jar" tofile="${referenced.lib}/${childproject2.name}.jar" />
	</target>

	<!-- COPY -->
	<target name="copy" depends="proguard">
		<delete dir="${target.tempdir}">
		</delete>
		<copy todir="${target.tempdir}">
			<fileset dir=".">
				<include name="${resource.dir}/**/*.*" />
				<include name="${lib.dir}/*.*" />
			</fileset>
		</copy>
	</target>

	<!-- 打包 -->
	<target name="package" depends="copy">
		<path id="target-classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<pathconvert property="mf.classpath" pathsep=" " description="把上面定义的path转换成property, path中jar包的路径用空格分开">
			<mapper>
				<chainedmapper>
					<!-- 移除绝对路径 -->
					<flattenmapper />
				</chainedmapper>
			</mapper>
			<path refid="target-classpath" description="path引用了上面定义的target-classpath" />
		</pathconvert>
		<mkdir dir="${target.tempdir}/" />
		<jar destfile="${target.tempdir}/${lib.dir}/${jarName}">
			<fileset dir="${classes.tempdir}">
				<include name="**/*.*"/>
			</fileset>
			<!-- set mainfest information to manifest -->
			<manifest>
				<attribute name="Manifest-Version" value="1.0" />
				<attribute name="Build-Jdk" value="${java.version}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Package-Time" value="${package.time}" />
				<attribute name="Main-Class" value="com.jtang.Launcher" />
				<attribute name="Class-Path" value=" ../${resource.dir}/ ${mf.classpath} " >
				</attribute>
			</manifest>
		</jar>
		<delete dir="${classes.tempdir}" includeemptydirs="true" deleteonexit="true"/>
	</target>

	<target name="release" depends="package">
		<delete dir="${release.dir}" deleteonexit="true" />
		<mkdir dir="${release.dir}" />
		<copy todir="${release.dir}">
			<fileset dir="${target.tempdir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="ant/">
				<include name="launcher.bat" />
				<include name="launcher.sh" />
			</fileset>
		</copy>
	</target>

	<!-- 
	发布到指定目录后，调用svn commit提交.
	-->

	<!-- 清理 -->
	<target name="clean" depends="release">
		<delete dir="${classes.tempdir}" />
		<delete dir="${target.tempdir}" />
	</target>
</project>

